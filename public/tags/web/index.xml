<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on Philip Mallegol-Hansen</title>
    <link>/tags/web/</link>
    <description>Philip Mallegol-Hansen (Web)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
      

      
    

    
    <lastBuildDate>Tue, 07 May 2024 09:33:00 -0700</lastBuildDate>
    
    <atom:link href="/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo Dev Container</title>
      <link>/blog/hugo-dev-container/</link>
      <pubDate>Tue, 07 May 2024 09:33:00 -0700</pubDate>
      
      <guid>/blog/hugo-dev-container/</guid>
      <description>&lt;p&gt;As &lt;a href=&#34;https://philip.mallegolhansen.com/blog/embarrassment-is-a-sign-of-growth/&#34;&gt;recently mentioned&lt;/a&gt; I&amp;rsquo;m now using &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; as the technology upon which this blog is built. There are many things I like about Hugo, but one factor had been a bit annoying: To preview what my changes will end up looking like, I need access to a machine that has Hugo installed.&lt;/p&gt;
&lt;p&gt;This is all fine and dandy when I&amp;rsquo;m at my desk at home, where I do most of my writing. But I wanted the option to take this operation on the go, in case I&amp;rsquo;m somewhere with my iPad and feel an itch to write something down.&lt;/p&gt;
&lt;p&gt;Enter: &lt;a href=&#34;https://github.com/features/codespaces&#34;&gt;GitHub Codespaces&lt;/a&gt;. Codespaces are a relatively new feature in GitHub, that allow you to easily open up a clone of a GitHub repo inside a &lt;a href=&#34;https://containers.dev/&#34;&gt;Dev Container&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With a little bit of futzing around, I was able to add the following file to the repo that contains this site:&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/hanse00/84b236364612ee69be723dd6f9b67e6b.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;And just like that, I can launch a Codespace directly from the GitHub UI, and author posts in my web browser, run the hugo commands to preview the posts, and then commit them so they get deployed to the live site.&lt;/p&gt;
&lt;p&gt;There are a few rough edges, where clicking on links in the preview tries to load a URL relative to localhost, which won&amp;rsquo;t work since my site isn&amp;rsquo;t actually running &lt;em&gt;locally&lt;/em&gt; to me. Perhaps that&amp;rsquo;s just an error in the theme I&amp;rsquo;m using, I&amp;rsquo;m unsure for now.&lt;/p&gt;
&lt;p&gt;All in all, it&amp;rsquo;s still great compared to not having the option to author away from my desk at all. And embarassingly for Squarespace, this works &lt;em&gt;much&lt;/em&gt; better than their mobile UI.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Just an HTML Document</title>
      <link>/blog/just-an-html-document/</link>
      <pubDate>Tue, 23 Jan 2024 18:03:08 -0800</pubDate>
      
      <guid>/blog/just-an-html-document/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://philip.mallegolhansen.com/blog/back-to-basics/&#34;&gt;I recently wrote&lt;/a&gt; a bit about wanting to return to tinkering with web technologies, without all of the noise that tends to get in the way in modern web development.&lt;/p&gt;
&lt;p&gt;Given that many people aren’t familiar with web development at all, and of those who are, I suspect many of the more junior folks haven’t ever done things the “old” way, I wanted to take a moment today to describe what exactly it takes to make a web page in this manner.&lt;/p&gt;
&lt;h2 id=&#34;html&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#html&#34;&gt;
        #
    &lt;/a&gt;
    HTML
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;HTML stands for HyperText Markup Language, all the language really is, is a definition a few special “tags” that you can write inline with the rest of your text, those tags in turn have special meanings that the web browser understands and “marks up” appropriately.&lt;/p&gt;
&lt;p&gt;For example, the tag &amp;lt;b&amp;gt; in HTML means bold, inversely &amp;lt;/b&amp;gt; means end-of-bold. So if you wrote something like: Hey there, &amp;lt;b&amp;gt;how&amp;lt;/b&amp;gt; are you? You would specify that the word “how” is in bold. The actual tags don’t get displayed in the text, the result would look like: Hey there, &lt;strong&gt;how&lt;/strong&gt; are you?&lt;/p&gt;
&lt;p&gt;Of course HTML has a whole host of other tags that do all sorts of things, from inserting video to changing the color of your text, if you know the right tags, you can do just about anything. But if you’re just getting started, there isn’t all that much you have to wrap your head around to make &lt;em&gt;something&lt;/em&gt; appear.&lt;/p&gt;
&lt;p&gt;A web page with a title and a few paragraphs of text would look something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Philip&amp;#39;s Web Playground&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Like many technologists, a combination of advancement in my own career and the steady evolution of the web has driven me away from interacting with web technologies as their most basic levels.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Rather than hand crafting HTML documents, we invent increasingly more complicated contraptions with the supposed goal of easing the original task.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    These new tools and technologies have their time and place, I believe that. But I also believe that we significantly overuse them, apply them at times and in places where they do &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;em&lt;/span&gt;&amp;gt;not&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;em&lt;/span&gt;&amp;gt; belong.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    This site exists for the explicit purpose of allowing me the joy of getting back in touch with the web, getting my hands &amp;#34;dirty&amp;#34; with web technologies new and old, and exploring their application.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    There is no dogma, I am not decidedly against any particular technology, nor am I committed to using technologies simply because they are the norm.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    I hope you find some use in this page, whether it be as a concrete technical example, or simply as an object that sparks your own curiosity for the web.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notable in the context of “modern” development practices: I wrote this myself, by hand. There’s no static site generator software, or other complexity involved in “generating” the HTML. I simply sat down at my editor, and wrote it.&lt;/p&gt;
&lt;h3 id=&#34;technically-valid-vs-usable&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#technically-valid-vs-usable&#34;&gt;
        ##
    &lt;/a&gt;
    Technically Valid vs. Usable
&lt;/div&gt;
&lt;/h3&gt;
&lt;p&gt;Those of you who have experience developing web pages probably realized immediately that my example above is &lt;em&gt;technically&lt;/em&gt; invalid. It’s true, the HTML specification sets out a bunch of rules about which tags may be used under which circumstances, and my example does not adhere to those rules.&lt;/p&gt;
&lt;p&gt;However it’s worth understanding that over the past three decades, developers of web browsers have put in a lot of work to make sure that anything that even remotely resembles a valid HTML document will display correctly in their browser. The example I posted isn’t valid, but it &lt;em&gt;works&lt;/em&gt; in every browser I’ve tried.&lt;/p&gt;
&lt;p&gt;If you’re someone who is trying to learn web development, I strongly recommend you start by worrying about making things work. Once you have achieved something you feel good about, reformatting it to be valid is an easier fight, than worrying about a bunch of details up front you likely won’t understand.&lt;/p&gt;
&lt;h2 id=&#34;the-document&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#the-document&#34;&gt;
        #
    &lt;/a&gt;
    The Document
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;Alright, we have a bit of HTML written up, now what? It goes in a document. Specifically the document should have the .html file extension, but besides that there’s no black magic. Any plain text editor, such as Notepad on Windows, or TextEdit on macOS will do.&lt;/p&gt;
&lt;p&gt;A mistake some folks make here is, you definitely do &lt;strong&gt;not want&lt;/strong&gt; to use a Word Processor such as Microsoft Word. These applications have their own use in marking up text documents for print and display, but they embed their own additional data besides the actual text, such as font size, position on page, etc. which does not make for valid HTML. If you try to create a page in Word and then save that, you’ll have a bad time trying to make an HTML document out of it. A simple text editor is your friend.&lt;/p&gt;
&lt;h2 id=&#34;hosting&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#hosting&#34;&gt;
        #
    &lt;/a&gt;
    Hosting
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;Hosting is, in my opinion, the hardest part of web development to explain to people, and it’s also the source of much busywork.&lt;/p&gt;
&lt;p&gt;In brief, the purpose of hosting your webpage is: There needs to exist some URL (address) on the web that people can go to, and when they go there, your HTML document is presented to them. For this to happen, two distinct parts need to come together, an address needs to exist that points to a web server, and the server needs to be configured to return your page whenever people connect to it.&lt;/p&gt;
&lt;p&gt;In my case, I’ve elected to use Google Cloud Storage (GCS) as my web server, and configured a few things on the back end for that to work with the address &lt;a href=&#34;https://playground.mallegolhansen.com&#34;&gt;https://playground.mallegolhansen.com&lt;/a&gt;. We won’t today go into how I set up that, it can get a bit technically hairy. What’s important to know is this: The setup is a one-time activity, once everything is configured, it’s just like uploading a file to Google Drive, Dropbox, or some other internet connected storage service. Whatever HTML document I upload to the storage account, is what people get presented when they go to the address.&lt;/p&gt;
&lt;h2 id=&#34;updates&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#updates&#34;&gt;
        #
    &lt;/a&gt;
    Updates
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;So how do you update the page? You modify that document you have saved, adding, removing, or modifying the text and HTML Tags. Then you sign in to the web hosting solution and upload the new version of the file. And that’s it! There’s a constant loop of making changes to the document, and uploading the new version for people to see.&lt;/p&gt;
&lt;p&gt;Compared to the prevailing modern practices including dozens of tools you run, need to keep updated, and integrate with each other, web development really can be easy if you don’t &lt;em&gt;need&lt;/em&gt; all the potential advantages the tools offer.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Back to Basics</title>
      <link>/blog/back-to-basics/</link>
      <pubDate>Sun, 21 Jan 2024 17:49:20 -0800</pubDate>
      
      <guid>/blog/back-to-basics/</guid>
      <description>&lt;p&gt;My first foray into web development was in 2010, at the time I was a first year student at &lt;a href=&#34;https://www.rts.dk/htx-roskilde&#34;&gt;HTX Roskilde&lt;/a&gt;, taking the mandatory “Communications &amp;amp; IT” course taught by one of the school’s newer teachers, &lt;a href=&#34;https://bartek.dk/&#34;&gt;Bartek&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The technical depth of that class was intentionally rather shallow. The focus was heavily on the semantic meaning of the various HTML keywords and their use, and things like the &lt;a href=&#34;https://en.wikipedia.org/wiki/Principles_of_grouping&#34;&gt;Gestalt laws of grouping&lt;/a&gt;, rather than trying to do anything technically impressive.&lt;/p&gt;
&lt;p&gt;JavaScript for example was entirely off limits with the exception of a few pioneering students that simply could not help themselves from integrating this “advanced” technology into their webpages. The result was most students managing to create technically valid HTML documents with a little bit of text about ourselves and what we were learning at the school, with a bit of styling to stand out among each other.&lt;/p&gt;
&lt;p&gt;Though it may not sound like much, the fact that the MediaLab had a publicly accessible web server (Apache running on Ubuntu Server on top of a rack-mount IBM server from ~2000) for students to experiment with “real world” use of web technologies was huge. In the wider context of danish &lt;a href=&#34;https://en.wikipedia.org/wiki/Gymnasium_(Denmark)&#34;&gt;gymnasiums&lt;/a&gt; the practice was ahead of its peers, to the point of being considered unconventional. The teachers and students in the MediaLab got their fair share of trouble for breaking boundaries in this manner, but the end result was a student body capable of &lt;em&gt;really&lt;/em&gt; hosting pages on the web - An invaluable skill for the modern age.&lt;/p&gt;
&lt;p&gt;Unfortunately since my graduation, the bureaucracy eventually got its way. Between the advent of &lt;a href=&#34;https://gdpr-info.eu/&#34;&gt;GDPR&lt;/a&gt; and similar rules and regulations that gave credence to the argument that student data could not be published online, and the retirement of Karl Bjarnason who was single-handedly responsible for the management of the hardware and software underpinning the system, the willpower to continue the “StudieWeb” project seems to have died. It’s a real shame as I wish I could point back to those first experiments and see how far we’ve come.&lt;/p&gt;
&lt;h2 id=&#34;squarespace&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#squarespace&#34;&gt;
        #
    &lt;/a&gt;
    Squarespace
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;I came away from my school years with two particularly relevant beliefs:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Having some kind of online presence is valuable no matter who you are - Particularly owning the domain name you point people to has immense value, as you can modify DNS records to point to whatever the technology stack of the future is, whilst ensuring people’s old memories, bookmarks, and search results continue to get them to you, in whatever form that is.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I’m a god awful designer - Or rather I am right in that gap where I have enough of an eye for design to tell when my work is good, and when it’s bad, but I’m not quite good enough to execute to the level I expect, a source of much frustration when mucking about with CSS and trying to make things look good.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Eventually I found a solution that could satisfy both of these beliefs at once: &lt;a href=&#34;https://www.squarespace.com/&#34;&gt;Squarespace&lt;/a&gt;. I think I first heard of Squarespace during an advertisement read on &lt;a href=&#34;https://www.hellointernet.fm/podcast/3&#34;&gt;Hello Internet #3&lt;/a&gt; and, to my recollection, I’ve been a customer ever since in various forms. The first version of my site was a single “Cover Page” (They used to have a special, cheaper, plan for these kinds of one page only sites), eventually that page ended up looking like this:&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://philip.mallegolhansen.com/blog/back-to-basics/screenshot.png&#34;
    alt=&#34;A screenshot of the old cover page, with my name, job title, and social links on top of a photo of myself at a computer.&#34;&gt;&lt;figcaption&gt;
      &lt;p&gt;The last revision of my “Cover Page” site before moving to a fully featured Squarespace site.&lt;/p&gt;
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I should note here that I’m not being paid to mention Squarespace, nor do I get any kind of discount or anything else, I’m just mentioning it here as it’s been a step in my journey.&lt;/p&gt;
&lt;h2 id=&#34;do-it-yourself&#34; &gt;
&lt;div&gt;
    &lt;a href=&#34;#do-it-yourself&#34;&gt;
        #
    &lt;/a&gt;
    Do It Yourself
&lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;Squarespace has served me well for as long as I’ve been a customer, but in the past few years something has been building within me, I imagine it’s the same feeling my father feels with cars, and my grandfather did with carpentry before him. No matter how good, buying a product just doesn’t scratch the same itch as building something yourself. So I’ve finally decided to build something for the web. To do this requires two things of me:&lt;/p&gt;
&lt;p&gt;First, I have to accept that I am not a great designer - And that’s okay. I’m not competing for a design award, I’m not even trying to replace this website as my “home” (At least for now). I am simply building for the joy of doing so.&lt;/p&gt;
&lt;p&gt;Second, I have to allow myself not to commit. I have a habit of wanting to do everything well, I set high standards for myself. But by doing so, it’s easy to kill the fun and make something feel like a chore.&lt;/p&gt;
&lt;p&gt;Notice how those two are basically the same thing said in two different ways? Yeah, me too.&lt;/p&gt;
&lt;p&gt;I’m incredibly excited to revisit my roots and write plain old HTML webpages for the first time in a decade. I sincerely invite you to join me on this journey. The web doesn’t have to be difficult, polished, serious, and limited to billion dollar companies. Writing a webpage really only takes minutes if you can simply allow yourself to get away with something less than what it could be.&lt;/p&gt;
&lt;p&gt;I think there’s something truly freeing in just making the web what it always was: A bunch of HTML files that link to each other.&lt;/p&gt;
&lt;p&gt;You can check out my little web experiment at: &lt;a href=&#34;https://playground.mallegolhansen.com&#34;&gt;https://playground.mallegolhansen.com&lt;/a&gt;, and keep reading this blog as I detail the things I add over time.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
